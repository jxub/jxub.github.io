<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software Architecture on Jakub Janarek</title>
    <link>https://jakubjanarek.com/tags/software-architecture/</link>
    <description>Recent content in Software Architecture on Jakub Janarek</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright Â© 2017 Jakub Janarek</copyright>
    <lastBuildDate>Sun, 02 Jul 2017 13:12:07 +0200</lastBuildDate>
    
	<atom:link href="https://jakubjanarek.com/tags/software-architecture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Messaging Queues Overview</title>
      <link>https://jakubjanarek.com/posts/messaging-queues-overview/</link>
      <pubDate>Sun, 02 Jul 2017 13:12:07 +0200</pubDate>
      
      <guid>https://jakubjanarek.com/posts/messaging-queues-overview/</guid>
      <description>I wrote piece this while researching how does Kafka work, as we are using it at Datamaran for our messaging system. Hope you&amp;rsquo;ll find this long slog a productive and enjoyable read ;)
Messaging queues allow applications to communicate y sending and reading messages between them. Every messaging queue implements an asynchronous protocol, that is a system that does not require for the message to be responded to immediately (think of, HTTP for example).</description>
    </item>
    
  </channel>
</rss>